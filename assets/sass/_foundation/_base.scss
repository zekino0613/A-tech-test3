@use "./mixin"as mixin;
// @use "../_foundation/base" as base;



html {
  width: 100%;
  margin: 0;
  padding: 0;
  // overflow-x: hidden;
  .no-scroll {
    overflow: hidden;
    /* スクロールを無効化 */
    position: fixed;
    /* 固定位置 */
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  scroll-behavior: smooth;
  margin: 0; // 
  padding: 0;
  scroll-margin-top: 250px;
  width: 100%;
  height: 100%; // 高さが必要な場合
  background: url('../../assets/images/kidsland_image/bg/bg-pc.webp') no-repeat center top;
  background-size: cover;
  text-transform: capitalize; //全ての文字を大文字に変換
  .scroll-to-top {
    position: fixed;
    bottom: 68px;
    right: 22px;
    width: 80px;
    /* ボタンの幅 */
    height: 80px;
    /* ボタンの高さ */
    background-color: rgba(#949E33, 0.7);
    /* 背景色と半透明度 */
    border-radius: 50%;
    /* 円形にする */
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 36px;
    /* 矢印の大きさ */
    font-weight: bold;
    /* 矢印を太字に */
    color: #ffffff;
    /* 矢印の色 */
    cursor: pointer;
    opacity: 0;
    /* 初期状態で非表示 */
    visibility: hidden;
    transform: scale(0.8);
    /* 初期状態で縮小 */
    transition: opacity 1s ease, transform 0.3s ease, visibility 0.3s ease;
    /* 表示のトランジション */
    z-index: 999;
    &.show {
      opacity: 1;
      /* 表示状態 */
      visibility: visible;
      /* 表示状態 */
      transform: scale(1);
      /* 通常サイズ */
      transition: 1s;
    }
    &:hover {
      transition: 1s;
      background-color: rgba(#CA7F13, 0.9);
      /* ホバー時の色 */
    }
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

main {
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
  height: auto; //レイアウトシフ対策
}

li {
  list-style: none;
}

a {
  text-decoration: none;
  color: rgb(0, 0, 0);
  display: block;
  /* `<a>`全体をクリック可能に */
  transition: .3s;
}

a:hover {
  opacity: 0.7;
  transition: .3s;
}

/* キーボード操作時にのみフォーカスアウトラインを表示 */
a:focus-visible {
  outline: 2px solid #fefefe;
  /* フォーカス時の アウトライン */
  box-shadow: 0 0 2px #ffffff, 0 0 0 4px #000000;
  /* 2本目のアウトライン */
  border-radius: 5px;
}

//スクロール中に下からフェードイン
.fade-in {
  opacity: 0;
  transform: translateY(100px);
  transition: opacity 1s ease-out, transform 1s ease-out;
  visibility: hidden;
  /* 初期状態では要素を隠します。 */
  &.visible {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
    /* ビューポート内に入ったときに要素を表示します。 */
  }
}

//mainvisualのテキスト。ロード後にフェードイン
.fadein {
  opacity: 0;
  transform: translate(0, 200px);
  /* 初期位置を下にずらす */
  transition: all 1s ease;

  /* イージングを適用 */
  &.scrollin {
    opacity: 1 !important;
    transform: translate(0, 0) !important;
  }
}




//-------------------------------------------------------------------------------
// wordpressテンプレートパーツ
//-------------------------------------------------------------------------------
// 【パンくずリストプラグイン】-------------↓
#breadcrumbs {
  @include mixin.font-settings
  ( F-size18
  , F-line-height36
  , F-letter-spacing-1-8
  , F-family-mincho
  , normal
  , F-color-orange);
  padding: 27.5px 0 0px 36px;
  display: flex;

  /* 各パンくずの要素設定 */
  span {
    display: flex;
    flex-wrap: wrap; // 折り返し設定
    gap: 4px; // 各要素の間隔を設定
    margin: 0; // 不要な余白を削除
    padding: 0;

    /* リンクのスタイル */
    a {
      color: #ca7f13; // リンクの色
      text-decoration: none; // 下線を削除
      transition: color 0.3s ease; // ホバー時のスムーズな色変更
      margin: 0;

      &:hover {
        color: #a8660f; // ホバー時の色
      }
    }

    /* 最後のパンくず要素 */
    &.breadcrumb_last {
      margin-right: 16px; // 必要に応じて調整
    }

    /* 最後の区切り線を削除 */
    &:last-child::after {
      content: ""; // 空白
    }

    &:last-child::after {
      content: ""; // 最後の要素の区切り線を削除
    }
  }
}





@include mixin.TAB1 {
  body {
    width: 100%;
    height: 100%; // 高さが必要な場合
    background: url('../../assets/images/kidsland_image/bg/bg-sp.webp') no-repeat center top;
    background-size: cover;
  }
  .brsp {
    display: block;
  }

  //PC版改行
  .brpc {
    display: none;
  }
}


@include mixin.SP {
  body {
    .scroll-to-top {
      position: fixed;
      bottom: 62px;
      right: 10px;
      width: 40px;
      /* ボタンの幅 */
      height: 40px;
      /* ボタンの高さ */
      background-color: rgba(#949E33, 0.7);
      /* 背景色と半透明度 */
      border-radius: 50%;
      /* 円形にする */
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 18px;
      /* 矢印の大きさ */
      font-weight: bold;
      /* 矢印を太字に */
      color: #ffffff;
      /* 矢印の色 */
      cursor: pointer;
      opacity: 0;
      /* 初期状態で非表示 */
      visibility: hidden;
      transform: scale(0.8);
      /* 初期状態で縮小 */
      transition: opacity 1s ease, transform 0.3s ease, visibility 0.3s ease;
      /* 表示のトランジション */
      z-index: 999;

      &.show {
        opacity: 1;
        /* 表示状態 */
        visibility: visible;
        /* 表示状態 */
        transform: scale(1);
        /* 通常サイズ */
        transition: 1s;
      }

      &:hover {
        transition: 1s;
        background-color: rgba(#CA7F13, 0.9);
        /* ホバー時の色 */
      }
    }
  }


  .brsp {
    display: block;
  }

  //PC版改行
  .brpc {
    display: none;
  }


  
  //-------------------------------------------------------------------------------
  // wordpressテンプレートパーツ
  //-------------------------------------------------------------------------------
  // 【パンくずリストプラグイン】-------------↓
  #breadcrumbs {
    @include mixin.font-settings
    (F-size14
    ,F-line-height36
    ,F-letter-spacing-1-4
    ,F-family-mincho
    ,normal, F-color-orange);
    padding: 12.5px 0 0px 4px;

    /* 各パンくずの要素設定 */
    span {
      display: flex;
      // flex-wrap: wrap; // 折り返し設定b
      gap: 4px; // 各要素の間隔を設定
      margin: 0; // 不要な余白を削除
      padding: 0;
      /* リンクのスタイル */
      a {
        color: #ca7f13; // リンクの色
        text-decoration: none; // 下線を削除
        transition: color 0.3s ease; // ホバー時のスムーズな色変更
        margin: 0;
        &:hover {
          color: #a8660f; // ホバー時の色
        }
      }

      /* 最後のパンくず要素 */
      &.breadcrumb_last {
        margin-right: 16px; // 必要に応じて調整
      }

      /* 最後の区切り線を削除 */
      &:last-child::after {
        content: ""; // 空白
      }
    }
  }
}